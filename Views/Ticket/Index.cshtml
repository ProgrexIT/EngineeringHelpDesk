@using Help_Desk_2.Models
@model IPagedList<Ticket>

@{
    ViewBag.Title = "My Open Tickets";
    Session["lastView"] = Request.Url.PathAndQuery;
    var actionName = ViewContext.RouteData.Values["action"].ToString().ToLower();
    ViewBag.showSelect = actionName == "admin";

    ViewBag.searchType = new SelectList(new List<SelectListItem>
    {
        new SelectListItem {Value = "", Text = "Open" },
        new SelectListItem {Value = "1", Text = "Expired" },
        new SelectListItem {Value = "2", Text = "Published" },
        new SelectListItem {Value = "3", Text = "All" }
    }, "Value", "Text");
}

<header>
    <h2 class="title">@ViewBag.Title<span class="summary-top pull-right">@Html.ActionLink("New Ticket", "New", null, htmlAttributes: new { @class = "btn btn-primary" })</span></h2>
</header>

<div class="container-view">
    <form class="form-inline" action="@ViewBag.formAction">
        @if (ViewBag.showSelect)
        {
            <div class="form-group">
                <label for="searchType">Filter by: </label>
                @Html.DropDownList("searchType", (IEnumerable<SelectListItem>)ViewBag.searchType, new { @class = "form-control" })

            </div>
        }
        @*
    <div class="form-group hidden">
        <input type="text" class="form-control" id="searchStr1" name="searchStr" placeholder="Enter search text" value='@Request.QueryString["searchStr"]'>
    </div>
        *@
        <button type="submit" class="btn btn-default">Search</button>
    </form>
    <table class="table table-bordered table-hover table-condensed table-view">
        <thead>
            <tr>
                <th>Created on</th>
                <th>Originitor</th>
                <th>Brief description</th>                
                <th>Status</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr onclick="$(location).attr('href', '@Url.Action("Details", "Ticket", new { @id = item.ID })')">

                    <td>@Html.DisplayFor(modelItem => item.dateComposed)</td>
                    <td>@Html.DisplayFor(modelItem => item.UserProfile.displayName)</td>
                    <td>@Html.DisplayFor(modelItem => item.headerText)</td>       
                    
                    <td>
                        @Html.DisplayFor(modelItem => item.status)
                    </td>
                    
                </tr>
            }
        </tbody>
    </table>

    <div class="pager">
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.AddRouteValue("searchType", @Request.QueryString["searchType"])
        .AddRouteValue("searchStr", @Request.QueryString["searchStr"])
        .DisplayFirstAndLastPage()
        .SetFirstPageText("First")
        .SetLastPageText("Last")
        .SetPreviousPageText("Prev")
        .SetNextPageText("Next"))

        <div class="text-muted">Displaying @Model.ItemStart - @Model.ItemEnd of @Model.TotalItemCount</div>
    </div>
</div>
