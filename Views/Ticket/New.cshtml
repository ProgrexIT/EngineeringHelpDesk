@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@model Help_Desk_2.Models.Ticket

@{

    ViewBag.Title = "New Ticket";

    UserProfile userProfile;
    if (ViewBag.displayName == null)
    {
        UserData ud = new UserData();
        userProfile = ud.getUserProfile();

        ViewBag.displayName = userProfile.displayName;
    }    
}

<div class="container">    
    <h2>@ViewBag.Title <span class="summary-top pull-right">Draft</span></h2>
    <p class="text-muted">Created by @ViewBag.displayName on @String.Format("{0:d}", DateTime.Now)</p>
</div>
   
<hr class="title"/>
@using (Html.BeginForm("New", "Ticket", FormMethod.Post,
     new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
                  
        <div>
            @Html.LabelFor(model => model.headerText, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.headerText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.headerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.description, new { @class = "form-control richeditor" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Attachment section-->
        <div class="form-custom">
            @Html.Label("Attachments", htmlAttributes: new { @class = "control-label" })
            <input type="file" name="file1" class="file" data-show-upload="false" data-show-preview="false" />
        </div>

        <!-- Links -->
        <div>
            @Html.HiddenFor(model => model.links)
            @Html.Label("Links", htmlAttributes: new { @class = "control-label" })

            <table class="table table-condensed links">
                <tbody>
                   
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2">
                            <div class="row add-link">
                                <div class="col-sm-5">
                                   @Html.Label("Display Text for the Link")
                                </div>

                                <div class="col-sm-5">
                                    @Html.Label("URL for the Link ")
                                </div>

                               
                            </div>
                        </td>
                        </tr>
                    <tr>
                        <td colspan="2">
                            <div class="row add-link">
                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.linkText, new { htmlAttributes = new { @placeholder = "Link Display Text", @style = "width:300px" } })
                                </div>

                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.linkURL, new { htmlAttributes = new { @placeholder = "http://", @style = "width:300px" } })
                                </div>

                                <div class="col-sm-1">
                                    <input type="button" id="addLink" value="Add Link" class="btn btn-default" />
                                </div>
                            </div>

                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
       
        <div>
            <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>

}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
}
