@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@model Help_Desk_2.Models.Ticket

@if (ViewBag.newTicket == "1")
{
    ViewBag.Title = "New Ticket";

    UserProfile userProfile;
    if (ViewBag.displayName == null)
    {
        UserData ud = new UserData();
        userProfile = ud.getUserProfile();

        ViewBag.displayName = userProfile.displayName;
    }
} else
{
    ViewBag.Title = "Ticket: TMP" + Model.ID;
    ViewBag.displayName = Model.UserProfile.displayName;
}

<div class="container">    
    <h2>@ViewBag.Title <span class="summary-top pull-right">@Html.DisplayFor(model => model.status)</span></h2>
    <p class="text-muted">Created by @ViewBag.displayName on @Html.DisplayFor(model => model.dateComposed)</p>
</div>
   
<hr class="title"/>
@using (Html.BeginForm("New", "Ticket", FormMethod.Post,
     new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
                  
        <div>
            @Html.LabelFor(model => model.headerText, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.headerText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.headerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Attachment section-->
        <div class="form-custom">
            @Html.Label("Attachments", htmlAttributes: new { @class = "control-label" })
            @if (Model.Files != null && Model.Files.Count > 0)
            {
                foreach (var t in Model.Files)
                {
                    <div>@t.fileName</div>
                }
            }
            <input type="file" name="file1" class="file" data-show-upload="false" data-show-preview="false" />
        </div>

        @if (false) {
        <div class="row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.dateSubmitted, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.dateSubmitted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateSubmitted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                @Html.LabelFor(model => model.adminEmail, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.adminEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adminEmail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.dateL1Release, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.dateL1Release, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateL1Release, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-sm-6">
                @Html.LabelFor(model => model.dateL2Release, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.dateL2Release, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateL2Release, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.sanityCheck, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.sanityCheck, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sanityCheck, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        }
        <div>
            <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>

}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
}
