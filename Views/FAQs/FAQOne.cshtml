@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@model Help_Desk_2.Models.KnowledgeFAQ

@if (ViewBag.mode == 0)
{

    ViewBag.Title = "New FAQ Article";
    ViewBag.Status = "Draft";
    ViewBag.CreationDate = String.Format("{0:d}", DateTime.Now);

    UserProfile userProfile;
    if (ViewBag.displayName == null)
    {
        UserData ud = new UserData();
        userProfile = ud.getUserProfile();

        ViewBag.displayName = userProfile.displayName;
    }
}
else
{
    ViewBag.Title = "FAQ: " + Model.headerText;
    ViewBag.displayName = Model.UserProfile.displayName;
    ViewBag.Status = Model.status;
    ViewBag.CreationDate = Html.DisplayFor(model => model.dateComposed);
}

@if(ViewBag.mode < 2)
{

    ViewBag.addAttachCode = "1"; //Activate attach code 
    ViewBag.addTinyMCECode = "1"; //Activate tinymce code

}
<div class="container">
    <h2>@ViewBag.Title <span class="summary-top pull-right">@ViewBag.Status</span></h2>
    <p class="text-muted">Created by @ViewBag.displayName on @ViewBag.CreationDate</p>
</div>

<hr class="title" />

@using (Html.BeginForm(ViewBag.mode ==0? "New": "Edit", "FAQs", FormMethod.Post,
                 new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("type",1) <!-- FAQs always have type == 1 -->
        @if (ViewBag.mode == 1)
        {
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.originatorID)
            @Html.HiddenFor(model => model.dateComposed)
            @Html.HiddenFor(model => model.exiryDate)
        }
        <div class="container">
            @if (ViewBag.mode < 2)
            { // Edit only
            <div>
                @Html.LabelFor(model => model.headerText, htmlAttributes: new { @class = "control-label" })
                
                <div>
                    @Html.EditorFor(model => model.headerText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.headerText, "", new { @class = "text-danger" })
                </div>
                
            </div>
            }       
            <div>
                <div>
                    @if (ViewBag.mode == 2)
                    {
                        @Html.Raw(Model.description)
                    }
                    else {
                        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })

                        @Html.TextAreaFor(model => model.description, new { @class = "form-control richeditor" })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })

                    }
                </div>

            </div>

            <!--Attachment section-->
            <div class="form-custom">
                @Html.Label("Attachments", htmlAttributes: new { @class = "control-label" })
                @if (Model != null)
                {
                    @Html.HiddenFor(model => model.deleteField)
                    if (Model.Files != null && Model.Files.Count > 0)
                    {
                        <table class="table table-condensed">

                            <tr><th>File Name</th><th>Size</th><th></th></tr>
                            @foreach (var t in Model.Files)
                            {

                                <tr>
                                    <td class="fileID hidden">@t.ID</td>
                                    <td>@Html.ActionLink(t.fileName, "d/" + t.ID, "Files", null, new { target = "_blank" })</td>
                                    <td>@t.displaySize</td>
                                    <td>
                                        <div tabindex="500" class="btn btn-primary btn-custom btn-custom-undelete hidden">
                                            <i class="fa fa-undo"></i>
                                            <span class="hidden-xs">Undelete</span>
                                        </div>

                                        <div tabindex="500" class="btn btn-primary btn-custom btn-custom-delete">
                                            <i class="glyphicon glyphicon-trash"></i>
                                            <span class="hidden-xs">Delete</span>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                }
                <input type="file" name="file1" class="file" data-show-upload="false" data-show-preview="false" />
            </div>

            <!-- Links -->
            <div>
                @Html.HiddenFor(model => model.links)
                @Html.Label("Links", htmlAttributes: new { @class = "control-label" })

                <table class="table table-condensed links">
                    <tbody>
                        @{
                            string tmpLinks = Model == null? null : Model.links;
                            string displayLinks = "";
                            if (!string.IsNullOrEmpty(tmpLinks))
                            {
                                var links = tmpLinks.Split(new char[] { '|' });
                                foreach (string link in links)
                                {
                                    if (!string.IsNullOrEmpty(link))
                                    {
                                        var tmp = link.Split(new char[] { '^' });
                                        displayLinks += "<tr class=\"normal\"><td><a href=\"" + tmp[1] + "\" target=\"_blank\">" + tmp[0] + "</a></td>" +
                                            "<td><input type=\"button\" value=\"Delete\" class=\"btn btn-default btn-custom-action\"></td></tr>";
                                    }
                                }
                            }
                            @Html.Raw(displayLinks)
                        }

                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">
                                <div class="row add-link">
                                    <div class="col-sm-5">
                                        @Html.EditorFor(model => model.linkText, new { htmlAttributes = new { @placeholder = "Link Display Text" } })
                                    </div>

                                    <div class="col-sm-5">
                                        @Html.EditorFor(model => model.linkURL, new { htmlAttributes = new { @placeholder = "Link URL" } })
                                    </div>

                                    <div class="col-sm-1">
                                        <input type="button" id="addLink" value="Add Link" class="btn btn-default" />
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
            
            @if (ViewBag.mode == 2)
            {
                <div>
                    <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                        
                        @Html.ActionLink("Edit", "Edit/" + Model.ID, "FAQs", null, htmlAttributes: new { @title = "Click to modify document", @class = "btn btn-primary" })
                        @Html.ActionLink("Close", "Index", "FAQs", null, htmlAttributes: new { @title = "Click to return to News home", @class = "btn btn-primary" })
                    </div>
                </div>
            }
            else {
            

            <div>
                <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                    <input type="submit" name="btnSave" value="Save" class="btn btn-primary" />
                    <input type="submit" name="btnSClose" value="Save & Close" class="btn btn-primary" />
                    <a href="~/FAQs" name="actionBtn" class="btn btn-primary">Cancel</a>
                </div>
            </div>
            }
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
