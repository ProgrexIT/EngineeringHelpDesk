@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@model Help_Desk_2.Models.News

@{
    ViewBag.Title = "New News Article";

    UserProfile userProfile;
    if (ViewBag.displayName == null)
    {
        UserData ud = new UserData();
        userProfile = ud.getUserProfile();

        ViewBag.displayName = userProfile.displayName;
    }
}

<div class="container">
    <h2>@ViewBag.Title <span class="summary-top pull-right">Unpublished</span></h2>
    <p class="text-muted">Created by @ViewBag.displayName on @String.Format("{0:d}", DateTime.Now)</p>
</div>

<hr class="title" />


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="container">
            <div>
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.body, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(model => model.body, new { @class = "form-control richeditor" })
                    @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-publish-bar">
                <span>
                    @Html.EditorFor(model => model.published)
                    @Html.LabelFor(model => model.published, htmlAttributes: new { @class = "control-label" })
                </span>

                <span>
                    @Html.LabelFor(model => model.publishedDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.publishedDate, new { htmlAttributes = new { @class = "form-control", @value = DateTime.Now } })
                </span>

                <span>
                    @Html.EditorFor(model => model.sticky)
                    @Html.LabelFor(model => model.sticky, htmlAttributes: new { @class = "control-label" })
                </span>
            </div>

            <div>
                <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                    <input type="submit" name="btnSave" value="Save" class="btn btn-primary" />
                    <input type="submit" name="btnSClose" value="Save & Close" class="btn btn-primary" />
                    <a href="~/News" name="actionBtn" class="btn btn-primary">Cancel</a>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
