@model Help_Desk_2.Models.News

@{
    ViewBag.Title = "News: " + Model.title;
    
}

<div class="container">
    <h2>News Article <span class="summary-top pull-right">@Html.DisplayFor(model => model.status)</span></h2>
    <p class="text-muted">Created by @Html.DisplayFor(model => model.UserProfile.displayName) on @Html.DisplayFor(model => model.creationDate)</p>
</div>

<hr class="title" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="container">
            <div>
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.body, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(model => model.body, new { @class = "form-control richeditor" })
                    @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-publish-bar">
                <span>
                    @Html.EditorFor(model => model.published)
                    @Html.LabelFor(model => model.published, htmlAttributes: new { @class = "control-label" })
                </span>

                <span>
                    @Html.LabelFor(model => model.publishedDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.publishedDate, new { htmlAttributes = new { @class = "form-control" } })
                </span>

                <span>
                    @Html.EditorFor(model => model.sticky)
                    @Html.LabelFor(model => model.sticky, htmlAttributes: new { @class = "control-label" })
                </span>
            </div>

            <div>
                <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                    <input type="submit" name="btnSave" value="Save" class="btn btn-primary" />
                    <input type="submit" name="btnSClose" value="Save & Close" class="btn btn-primary" />
                    <a href="~/News" name="actionBtn" class="btn btn-primary">Cancel</a>
                    <input type="submit" name="btnDelete" value="Delete" class="btn btn-primary" />

                </div>
            </div>
        </div>

        @if (false)
        {
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sticky, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sticky, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sticky, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.published, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.published, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.publishedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publishedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
