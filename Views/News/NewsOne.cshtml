@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@model Help_Desk_2.Models.News

@{ 
    if (ViewBag.mode == 0)
    {

        ViewBag.Title = "New News Article";
        ViewBag.Status = "Unpublished";
        ViewBag.CreationDate = String.Format("{0:d}", DateTime.Now);

        ViewBag.displayName = AllSorts.getUserDisplayName();

    }
    else
    {
        ViewBag.Title = "News: " + Model.title;
        ViewBag.displayName = Model.Originator.displayName;
        ViewBag.Status = Model.status + ((Model.sticky & Model.published) ? " / Sticky" : "");
        ViewBag.CreationDate = Html.DisplayFor(model => model.creationDate);
    }

    if (ViewBag.mode < 2)
    {

        ViewBag.addAttachCode = "1"; //Activate attach code 
        ViewBag.addTinyMCECode = "1"; //Activate tinymce code

    }

    try
    {
        ViewBag.prevURL = string.IsNullOrEmpty((string)Session["lastView"]) ? Request.UrlReferrer.PathAndQuery : Session["lastView"];
    }
    catch (Exception e)
    {
        ViewBag.prevURL = Url.Action("Index", "Home");
    }
}
@section cssCustomTop {
    @Styles.Render("~/Content/bootstrap-datepicker3.min.css")
}

<header>
    <h2>@ViewBag.Title <span class="summary-top pull-right">@ViewBag.Status</span></h2>
    @if (ViewBag.mode > 0)
    {
        <p class="text-muted">Created by @ViewBag.displayName on @ViewBag.CreationDate</p>
    }
    
</header>

<hr class="title" />


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.mode == 1)
        {
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.originatorID)
            @Html.HiddenFor(model => model.creationDate)
            @Html.HiddenFor(model => model.deleted)
                    
        }
        <div class="container-form news">
            @if (ViewBag.mode < 2)
            { // Edit only
            <div class="panel panel-info">
                <div class="panel-heading">@Html.LabelFor(model => model.title)</div>
                
                <div>
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
                
            </div>
            }       
            <div class="panel panel-info"> 
                
                @if (ViewBag.mode == 2)
                {
                    <div>@Html.Raw(Model.body)</div>
                }
                else
                {
                    <div class="panel-heading">@Html.LabelFor(model => model.body)</div>
                    <div>
                        @Html.TextAreaFor(model => model.body, new { @class = "form-control richeditor" })
                        @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
                    </div>
                }
            </div>            
            
            <!--Attachment section-->
            <div class="panel panel-info">
                <div class="panel-heading">@Html.DisplayName("Attachments")</div>
                <div>
                    @if (Model != null)
                    {
                        @Html.HiddenFor(model => model.deleteField)
                        if (Model.Files != null && Model.Files.Count > 0)
                        {
                            <table class="table table-condensed">
                                <tr><th>File Name</th><th>Size</th><th></th></tr>
                                @foreach (var t in Model.Files)
                                {
                                    <tr>
                                        <td class="fileID hidden">@t.ID</td>
                                        <td>@Html.ActionLink(t.fileName, "d/" + t.ID, "Files", null, new { target = "_blank" })</td>
                                        <td>@t.displaySize</td>
                                        @if (ViewBag.mode < 2)
                                        {
                                            <td>
                                                <div tabindex="500" class="btn btn-primary btn-custom btn-custom-undelete hidden">
                                                    <i class="fa fa-undo"></i>
                                                    <span class="hidden-xs">Undelete</span>
                                                </div>

                                                <div tabindex="500" class="btn btn-primary btn-custom btn-custom-delete">
                                                    <i class="glyphicon glyphicon-trash"></i>
                                                    <span class="hidden-xs">Delete</span>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            </table>
                        }
                    }
                    @if (ViewBag.mode < 2)
                    {
                        <input type="file" name="file1" class="file" data-show-upload="false" data-show-preview="false" />
                    }
                </div>
            </div>


            @if (ViewBag.mode == 2)
            {
                <div>
                    <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                        
                        @Html.ActionLink("Edit", "Edit/" + Model.ID, "News", null, htmlAttributes: new { @title = "Click to modify document", @class = "btn btn-primary" })
                        @Html.ActionLink("Close", "Admin", "News", null, htmlAttributes: new { @title = "Click to return to News home", @class = "btn btn-primary" })
                    </div>
                </div>
            }
            else {
            <div class="form-publish-bar">
                <span>
                    @Html.EditorFor(model => model.published)
                    @Html.LabelFor(model => model.published, htmlAttributes: new { @class = "control-label" })
                </span>

                <span>

                    @Html.LabelFor(model => model.publishedDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.publishedDate, new { htmlAttributes = new { @type="text" , @class = "form-control datepicker1", @style = "width:auto; display: table-cell; margin-left: 10px; padding-left:6px" } })
                </span>                  
               

                <span>
                    @Html.EditorFor(model => model.sticky)
                    @Html.LabelFor(model => model.sticky, htmlAttributes: new { @class = "control-label" })
                </span>
            </div>
           
            <div>
                <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                    <input type="submit" name="btnSave" value="Save" class="btn btn-primary" />
                    <input type="submit" name="btnSClose" value="Save & Close" class="btn btn-primary" />
                    @if (Model !=null && Model.deleted) {
                        <input type="submit" name="btnUnDelete" value="Undelete" class="btn btn-primary" />
                    }
                    else {
                        <input type="submit" name="btnDelete" value="Delete" class="btn btn-primary" />
                    }
                    <a href="@ViewBag.prevURL" name="actionBtn" class="btn btn-primary">Cancel</a>
                </div>
            </div>
            }
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/bootstrap-datepicker.min.js")
}
