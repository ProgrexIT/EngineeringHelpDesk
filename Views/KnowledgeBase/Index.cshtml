@using System.Collections.Generic;
@using Help_Desk_2.Models
@model IPagedList<KnowledgeFAQ>

@{
    ViewBag.Title = "Knowledge Base";
    Session["lastView"] = Request.Url.PathAndQuery;    //Record this as last view

    var actionName = ViewContext.RouteData.Values["action"].ToString().ToLower();
    ViewBag.formAction = actionName == "index" ? "KnowledgeBase/Search" : "";
    ViewBag.showSelect = actionName == "admin";
    ViewBag.searchType = new SelectList(new List<SelectListItem>
    {
        new SelectListItem {Value = "", Text = "Unpublished" },
        new SelectListItem {Value = "1", Text = "Expired" },
        new SelectListItem {Value = "2", Text = "Published" },
        new SelectListItem {Value = "3", Text = "All" }
    }, "Value", "Text");
}

<header>
    <h2 class="title">@ViewBag.Title<span class="summary-top pull-right">@Html.ActionLink("New Article", "New", null, htmlAttributes: new { @class = "btn btn-primary" })</span></h2>
</header>
<div class="container-view knowledgebase">

    <form class="form-inline" action="@ViewBag.formAction">
        @if (ViewBag.showSelect)
        {
            <div class="form-group">
                <label for="searchType">Filter by: </label>
                @Html.DropDownList("searchType", null, new { @class = "form-control" })
            </div>
        }
        <div class="form-group">
            <input type="text" class="form-control" id="searchStr1" name="searchStr" placeholder="Enter search text" value='@Request.QueryString["searchStr"]'>
        </div>
        <button type="submit" class="btn btn-default">Search</button>
    </form>

    @if (ViewBag.showSelect)
    {
        <table class="table table-bordered table-hover table-condensed table-view">
            <thead>
                <tr>                
                    <th>Brief description</th>
                    <th>Originator</th>                
                    <th>Creation date</th>
                    <th>Exiry date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr onclick="$(location).attr('href', '@Url.Action("Details", "KnowledgeBase", new { @id = item.ID })')">

                        <td>@Html.DisplayFor(modelItem => item.headerText)</td>
                        <td>@Html.DisplayFor(model => item.Originator.displayName)</td>
                        <td>@Html.DisplayFor(modelItem => item.dateComposed)</td>
                        <td>@Html.DisplayFor(modelItem => item.expiryDate)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {

        foreach (var item in Model)
        {
            <div class="panel panel-default">
                <a class="article-title" onclick="$(location).attr('href', '@Url.Action("Details", "KnowledgeBase", new { @id = item.ID })')">
                    @Html.DisplayFor(modelItem => item.headerText)
                </a>
                @*<div class="article-body">
                        @Html.Raw(item.body)
                    </div>*@
                <p class="text-muted">@Html.DisplayFor(modelItem => item.dateComposed) / Author: @Html.DisplayFor(modelItem => item.Originator.displayName)</p>


            </div>
        }
    }
    <div class="pager">
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.AddRouteValue("searchType", @Request.QueryString["searchType"])
        .AddRouteValue("searchStr", @Request.QueryString["searchStr"])
        .DisplayFirstAndLastPage()
        .SetFirstPageText("First")
        .SetLastPageText("Last")
        .SetPreviousPageText("Prev")
        .SetNextPageText("Next"))

        <div class="text-muted">Displaying @Model.ItemStart - @Model.ItemEnd of @Model.TotalItemCount</div>
    </div>
</div>
